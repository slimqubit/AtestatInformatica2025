; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define iAppName "Desktop Sudoku"
#define iAppVerName "Desktop Sudoku 1.0"
#define iAppPublisher "Darius Chitu"
#define iAppURL "https://github.com/slimqubit/AtestatInformatica2025"


[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId               = {{1C0111D9-0CAA-4CA2-99A6-23A901F1F09E}
AppName             = {#iAppName}
AppVerName          = {#iAppVerName}
AppPublisher        = {#iAppPublisher}
AppPublisherURL     = {#iAppURL}
AppSupportURL       = {#iAppURL}
AppUpdatesURL       = {#iAppURL}
DefaultDirName      = {autopf}\{#iAppName}
DefaultGroupName    = {#iAppName}
OutputDir           = .
OutputBaseFilename  = DesktopSudokuSetup
Compression         = lzma
SolidCompression    = yes
VersionInfoVersion  = 1.0.0

DisableWelcomePage  = no
DisableReadyMemo    = yes
DisableProgramGroupPage = yes

SetupLogging = yes

ArchitecturesAllowed=x64compatible
ArchitecturesInstallIn64BitMode=x64compatible

[Languages]
;Name: "english"; MessagesFile: "compiler:Default.isl"
Name: "ro"; MessagesFile: "files\Romanian.isl"


[Files]
Source: "..\out\artifacts\DesktopSudoku_main_jar\DesktopSudoku.exe";     	DestDir: "{app}"; Flags: ignoreversion
Source: "..\out\artifacts\DesktopSudoku_main_jar\*";  DestDir: "{app}"; Flags: ignoreversion
Source: "..\launch4j\AppSudoku.ico";     	DestDir: "{app}"; Flags: ignoreversion

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Icons]
Name: "{commondesktop}\{#iAppName}";  Filename: "{code:GetJavaPath}\javaw.exe"; Parameters: " -jar ""{app}\DesktopSudoku.main.jar"""; WorkingDir: "{app}"; IconFilename: "{app}\AppSudoku.ico";
Name: "{group}\{#iAppName}";          Filename: "{code:GetJavaPath}\javaw.exe"; Parameters: " -jar ""{app}\DesktopSudoku.main.jar"""; WorkingDir: "{app}"; IconFilename: "{app}\AppSudoku.ico";
Name: "{group}\{cm:UninstallProgram,{#iAppName}}"; Filename: "{uninstallexe}"


[Code]

var
  DownloadPage: TDownloadWizardPage;
  InstallJDK: boolean;
  FilesDownloaded: Boolean;
  JavaHome: string;

  
function JDKRequired(var VerFound: string): boolean;
var
  jKeys: TArrayOfString;
  jSVer, jSVerMin: string;
  i: integer;
  jIVer, jIVerMin: Int64;
begin
  jSVerMin := '17.0.10';
  Result:=True;
  VerFound:='';
  JavaHome := '';
  StrToVersion(jSVerMin, jIVerMin);
 
  if RegKeyExists(HKEY_LOCAL_MACHINE, 'Software\JavaSoft\JDK') then
  begin
    if RegGetSubkeyNames(HKEY_LOCAL_MACHINE, 'Software\JavaSoft\JDK', jKeys) then
    begin
      for i:=0 to GetArrayLength(jKeys)-1 do
      begin
        jSVer:=jKeys[i];
        if StrToVersion(jSVer, jIVer) then
        begin
          if jIVer >= jIVerMin then
          begin
            RegQueryStringValue(HKEY_LOCAL_MACHINE, 'Software\JavaSoft\JDK\'+jSVer, 'JavaHome', JavaHome);
            VerFound:=VerFound+'Versiune JDK: '+jSVer+'   (Home: '+JavaHome+')'+#13;
            Result:=False;
          end;
        end;
      end;
    end;
  end;
  
  if Result then JavaHome := ExpandConstant('{pf}\Java\jdk-17');
end;


procedure InitializeWizard();
var
  pgReady: TWizardPage;
  info: string;
begin
  InstallJDK := JDKRequired(info);
  
  pgReady:=PageFromID(wpReady);
  with TLabel.Create(pgReady) do
  begin
    Top := ScaleY(40); Left := ScaleX(0); AutoSize := True; Parent := pgReady.Surface; Font.Style := [fsBold, fsUnderline];
    Caption := 'Verificare dependințe';
  end;

  if InstallJDK then
  begin
    with TLabel.Create(pgReady) do
    begin
      Top := ScaleY(56); AutoSize := True; Parent := pgReady.Surface;
      Caption:='Java SE Development Kit (JDK) versiunea v.17.0.10, sau mai nouă, este necesară'#13'pentru a rula această aplicație! Următorul produs va fi instalat pe acest calculator:'
    end;
    with TLabel.Create(pgReady) do
    begin
      Top := ScaleY(88); Left := ScaleX(24); AutoSize := True; Parent := pgReady.Surface; Font.Style := [fsBold];
      Caption := 'Java SE Development Kit (JDK) 17.0.12 pentru Windows';
    end;
    if info <> '' then
    begin
      with TLabel.Create(pgReady) do
      begin
        Top := ScaleY(120); Left := ScaleX(0); AutoSize := True; Parent := pgReady.Surface;
        Caption := 'Următoarele versiuni Java SE Development Kit (JDK) au fost detectate:';
      end;
      with TLabel.Create(pgReady) do
      begin
        Top := ScaleY(138); Left := ScaleX(24); AutoSize := True; Parent := pgReady.Surface;
        Caption := info;
      end;
    end;
  end else
  begin
    with TLabel.Create(pgReady) do
    begin
      Top := ScaleY(56); AutoSize := True; Parent := pgReady.Surface;
      Caption:='Versiunea Java SE Development Kit (JDK) detectată respectă cerințele minime!'#13#13'Următoarele versiuni Java SE Development Kit (JDK) au fost detectate:'
    end;
    with TLabel.Create(pgReady) do
    begin
      Top := ScaleY(98); Left := ScaleX(24); AutoSize := True; Parent := pgReady.Surface;;
      Caption := info;
    end;
  end;
end;

function OnDownloadProgress(const Url, FileName: String; const Progress, ProgressMax: Int64): Boolean;
begin
  if Progress = ProgressMax then
  begin
    Log(Format('Successfully downloaded file to {tmp}: %s', [FileName]));
  end;
  Result := True;
end;


function DownloadJDK: Boolean;
begin
  DownloadPage := CreateDownloadPage(SetupMessage(msgWizardPreparing), SetupMessage(msgPreparingDesc), @OnDownloadProgress);
  DownloadPage.ShowBaseNameInsteadOfUrl := True;
  DownloadPage.Clear;
  DownloadPage.Add('https://download.oracle.com/java/17/archive/jdk-17.0.12_windows-x64_bin.exe', 'jdk-17.0.12_windows-x64_bin.exe.exe', '');
  DownloadPage.Show;
  try
    try
      DownloadPage.Download; // This downloads the files to {tmp}
      Result := True;
    except
      if DownloadPage.AbortedByUser then
        Log('Anulat de utilizator.')
      else
        SuppressibleMsgBox(AddPeriod(GetExceptionMessage), mbCriticalError, MB_OK, IDOK);
      Result := False;
    end;
  finally
    DownloadPage.Hide;
  end;
end;

function NextButtonClick(CurPageID: Integer): Boolean;
begin
  if (CurPageID = wpReady) and (InstallJDK) then
    Result := DownloadJDK
  else
    Result := True;
end;

function InstallJRE_Check: Boolean;
begin
  Result := InstallJDK and FilesDownloaded;
end;

function GetJavaPath(Param: String): String;
begin
  Result := JavaHome + '\bin';
end;


procedure CurStepChanged(CurStep: TSetupStep);
var
  Err: integer;
begin
  case CurStep of
    ssInstall:
      begin
        WizardForm.StatusLabel.Caption:= 'Instalare dependințe ...';
        WizardForm.StatusLabel.Font.Style := [fsBold];
        WizardForm.StatusLabel.Visible:=True;
        WizardForm.FileNameLabel.Caption:= 'Instalare Java SE Development Kit (JDK) v.17.0.12 pentru Windows ...';
        WizardForm.FilenameLabel.Visible:=True;
        WizardForm.Refresh;
        if FileExists(ExpandConstant('{tmp}\jdk-17.0.12_windows-x64_bin.exe.exe')) then
        Exec(ExpandConstant('{tmp}\jdk-17.0.12_windows-x64_bin.exe.exe'), '/s', '', SW_SHOW, ewWaitUntilTerminated, Err);
      end;
   end;
end;

